"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.clientController = exports.chatController = exports.socialController = exports.blogController = exports.adminController = exports.userController = void 0;
const client_s3_1 = require("@aws-sdk/client-s3");
const adminController_1 = require("../../providers/controllers/adminController");
const blogController_1 = require("../../providers/controllers/blogController");
const chatController_1 = require("../../providers/controllers/chatController");
const socialController_1 = require("../../providers/controllers/socialController");
const userController_1 = require("../../providers/controllers/userController");
const adminRepository_1 = require("../../providers/repositories/adminRepository");
const blogRepository_1 = require("../../providers/repositories/blogRepository");
const chatRepository_1 = require("../../providers/repositories/chatRepository");
const commentRepository_1 = require("../../providers/repositories/commentRepository");
const followRepository_1 = __importDefault(require("../../providers/repositories/followRepository"));
const messageRepository_1 = require("../../providers/repositories/messageRepository");
const notificationRepository_1 = __importDefault(require("../../providers/repositories/notificationRepository"));
const OTPRepository_1 = require("../../providers/repositories/OTPRepository");
const reactionRepository_1 = __importDefault(require("../../providers/repositories/reactionRepository"));
const userRepository_1 = require("../../providers/repositories/userRepository");
const AdminUseCase_1 = require("../../useCases/AdminUseCase");
const BlogUseCase_1 = require("../../useCases/BlogUseCase");
const ChatUseCase_1 = require("../../useCases/ChatUseCase");
const SocialUseCase_1 = require("../../useCases/SocialUseCase");
const UserUseCase_1 = require("../../useCases/UserUseCase");
const hashService_1 = require("../services/hashService");
const smtpService_1 = require("../services/smtpService");
const ClientUseCase_1 = require("../../useCases/ClientUseCase");
const clientController_1 = require("../../providers/controllers/clientController");
const clientRepository_1 = require("../../providers/repositories/clientRepository");
const AdvertisementRepository_1 = require("../../providers/repositories/AdvertisementRepository");
const s3 = new client_s3_1.S3Client({});
const userRepository = new userRepository_1.UserRepository();
const hashService = new hashService_1.BcryptHashService();
const emailService = new smtpService_1.SMTPService();
const otpRepository = new OTPRepository_1.OTPVerificationRepository();
const adminRepository = new adminRepository_1.AdminRepository();
const blogRepository = new blogRepository_1.BlogRepositroy();
const reactionReopository = new reactionRepository_1.default();
const notificationRepository = new notificationRepository_1.default();
const followerRepository = new followRepository_1.default();
const commentRepository = new commentRepository_1.CommentRepository();
const chatRepository = new chatRepository_1.ChatRepository();
const messageRepository = new messageRepository_1.MessageRepository();
const clientRepository = new clientRepository_1.ClientRepository();
const advertisementRepository = new AdvertisementRepository_1.AdvertisementRepository();
const userUseCases = new UserUseCase_1.UserUseCase(userRepository, hashService, emailService, otpRepository, notificationRepository);
const userController = new userController_1.UserController(userUseCases);
exports.userController = userController;
const socialUseCase = new SocialUseCase_1.SocialUseCase(userRepository, notificationRepository, followerRepository);
const socialController = new socialController_1.SocialController(socialUseCase);
exports.socialController = socialController;
const chatUseCase = new ChatUseCase_1.ChatUseCase(userRepository, chatRepository, messageRepository);
const chatController = new chatController_1.ChatController(chatUseCase);
exports.chatController = chatController;
const adminUseCase = new AdminUseCase_1.AdminUseCase(adminRepository, hashService, userRepository);
const adminController = new adminController_1.AdminController(adminUseCase);
exports.adminController = adminController;
const blogUseCase = new BlogUseCase_1.BlogPostUseCase(blogRepository, s3, reactionReopository, notificationRepository, commentRepository);
const blogController = new blogController_1.BlogController(blogUseCase);
exports.blogController = blogController;
const clientUseCase = new ClientUseCase_1.ClientUseCase(userRepository, emailService, clientRepository, advertisementRepository, s3);
const clientController = new clientController_1.ClientController(clientUseCase);
exports.clientController = clientController;
